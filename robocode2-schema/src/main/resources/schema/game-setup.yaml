$id: #game-setup.yaml
$schema: http://json-schema.org/draft-07/schema#
description: Game setup
javaType: net.robocode2.schema.GameSetup
properties:
  gameType:
    description: Type of game
    type: string
  arenaWidth:
    description: Width of arena in units
    type: integer
  isArenaWidthLocked:
    description: Flag specifying if the width of arena is fixed for this game type
    type: boolean
  arenaHeight:
    description: Height of arena in units
    type: integer
  isArenaHeightLocked:
    description: Flag specifying if the height of arena is fixed for this game type
    type: boolean
  minNumberOfParticipants:
    description: Minimum number of bots participating in battle
    type: integer
  isMinNumberOfParticipantsLocked:
    description: Flag specifying if the minimum number of bots participating in battle
      is fixed for this game type
    type: boolean
  maxNumberOfParticipants:
    description: Maximum number of bots participating in battle
    type: integer
  isMaxNumberOfParticipantsLocked:
    description: Flag specifying if the maximum number of bots participating in battle
      is fixed for this game type
    type: boolean
  numberOfRounds:
    description: Number of rounds in battle
    type: integer
  isNumberOfRoundsLocked:
    description: Flag specifying if the number-of-rounds is fixed for this game type
    type: boolean
  gunCoolingRate:
    description: Gun cooling rate. The gun needs to cool down to a gun heat of zero
      before the gun is able to fire
    type: number
  isGunCoolingRateLocked:
    description: Flag specifying if the gun cooling rate is fixed for this game type
    type: boolean
  inactivityTurns:
    description: Maximum number of inactive turns allowed, where a bot does not take
      any action, before it is zapped by the game
    type: integer
  isInactivityTurnsLocked:
    description: Flag specifying if the inactive turns is fixed for this game type
    type: boolean
  turnTimeout:
    description: Turn timeout in milliseconds for sending intent after having received
      'tick' message
    type: integer
  isTurnTimeoutLocked:
    description: Flag specifying if the turn timeout is fixed for this game type
    type: boolean
  readyTimeout:
    description: Time limit in milliseconds for sending ready message after having
      received 'new battle' message
    type: integer
  isReadyTimeoutLocked:
    description: Flag specifying if the ready timeout is fixed for this game type
    type: boolean
  delayedObserverTurns:
    description: Number of turns that are delayed for observers relative to the current
      turn enforced by the game
    type: integer
  isDelayedObserverTurnsLocked:
    description: Flag specifying if the delayed observer turns is fixed for this game
      type
    type: boolean
required:
- gameType
- arenaWidth
- isArenaWidthLocked
- arenaHeight
- isArenaHeightLocked
- minNumberOfParticipants
- isMinNumberOfParticipantsLocked
- maxNumberOfParticipants
- isMaxNumberOfParticipantsLocked
- numberOfRounds
- isNumberOfRoundsLocked
- gunCoolingRate
- isGunCoolingRateLocked
- inactivityTurns
- isInactivityTurnsLocked
- turnTimeout
- isTurnTimeoutLocked
- readyTimeout
- isReadyTimeoutLocked
- delayedObserverTurns
- isDelayedObserverTurnsLocked